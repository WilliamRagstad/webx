// test

post list/all/(data : Int)/data json(a: b, c : D) -> renderAllTodos(todos, test): out, hc() : u

post /about/(id: Num) form(text: String) -> renderAllTodos(a, b): c {
    const a = [5];
    if true { console.log(text); }
}

// This is an example WebX todo app project.
global {
    // Global in-memory database of todos for this example.
    const todos: [number] = [7, 3, 1];
    function test(): number { return todos[2]; }
    let a = test();
    console.log(a);
}

model Todo {
    title: String,
    completed: Boolean,
    createdAt: Date,
}

handler renderTodo(todo: Todo) (<h1>
    <input type="checkbox" checked={todo.completed} />
    {todo.title} - {getTimeDiff(todo.createdAt)}
</h1>)

handler renderAllTodos(todos: Todo) (
    <ul class="test" onClick={authenticate}>{todos.map(renderTodo)}</ul>
)

handler authenticate(user_id: Number) {
    if (user_id === 1) {
        return Guard::Allow;
    } else {
        return Guard::Deny;
    }
}

post /about/(id: Num) form(text: String) {
    const a = [5];
    if true { console.log(text); }
} -> renderAllTodos(a, b, c)

get /about (<div>
    <h1>About</h1>
    <p>This is an example WebX project.</p>
</div>)

location todos {
    // Display the global list of todos as HTML.
    get list/all/(data : Int)/data -> renderAllTodos(todos), renderAllTodos(todos)

    // Add a new todo to the list with the given title.
    // { title: "My Todo" }
    // returns HTML
    post add/ json(title: String) {
        let newTodo = {
            title,
            completed: false,
            createdAt: new Date()
        };
        todos.push(newTodo);
    } -> renderTodo(newTodo)

    // Toggle the completed status of the todo with the given id.
    // { id: 0 }
    // returns HTML
    post /toggle json(id: Int) {
        const todo = todos.find(t => t.id === id);
        if (todo) {
            todo.completed = !todo.completed;
            return renderTodo(todo);
        } else {
            return error("Todo not found.");
        }
    } -> renderTodo(todo)
}
